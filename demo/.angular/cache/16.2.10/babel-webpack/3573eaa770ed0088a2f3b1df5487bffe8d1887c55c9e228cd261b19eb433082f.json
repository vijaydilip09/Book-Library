{"ast":null,"code":"import { BookFilter } from '../book-filter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../book.service\";\nimport * as i2 from \"@angular/router\";\nexport class BookViewComponent {\n  constructor(bookService, router) {\n    this.bookService = bookService;\n    this.router = router;\n    this.isAscending = true;\n    this.filter = new BookFilter();\n    // enteredAuthor: string;\n    // enteredBookName: string;\n    this.currentPage = 1;\n    this.pageSize = 4;\n    this.searchTerm = '';\n    this.searchTitle = false;\n    this.searchAuthor = false;\n    this.searchName = false;\n    this.invalidSearchCriteria = false;\n    this.searchCriteria = 'title';\n  }\n  ngOnInit() {\n    this.getBooks();\n    // this.search();\n  }\n\n  getBooks() {\n    this.bookService.getBooksList().subscribe(data => {\n      this.books = data;\n    });\n  }\n  sortTable(field) {\n    this.books.sort((a, b) => {\n      const aValue = a[field];\n      const bValue = b[field];\n      if (this.isAscending) {\n        return aValue - bValue;\n      } else {\n        return bValue - aValue;\n      }\n    });\n    this.isAscending = !this.isAscending;\n  }\n  // In your component class\n  paginatedBooks() {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    return this.books.slice(startIndex, endIndex);\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n  nextPage() {\n    const maxPage = Math.ceil(this.books.length / this.pageSize);\n    if (this.currentPage < maxPage) {\n      this.currentPage++;\n    }\n  }\n  bookDetails(id) {\n    this.router.navigate(['book-details', id]);\n  }\n  // ...\n  search() {\n    console.log('enteredId', this.enteredId);\n    switch (this.searchCriteria) {\n      case 'id':\n        this.searchById();\n        break;\n      case 'author':\n        this.searchByAuthor();\n        break;\n      case 'name':\n        // Add the method for searching by name\n        this.searchByTitle();\n        break;\n      default:\n        this.invalidSearchCriteria = true;\n        console.error('Invalid search criteria');\n        break;\n    }\n  }\n  searchById() {\n    if (this.enteredId) {\n      this.bookService.searchBookById(this.enteredId).subscribe(result => {\n        this.book = result;\n        this.invalidSearchCriteria = false;\n        console.log('Book found:', result);\n      }, error => {\n        this.invalidSearchCriteria = true;\n        console.error('Error fetching book:', error);\n        // this.book = null; // Reset book on error\n      });\n    }\n  }\n\n  searchByAuthor() {\n    if (this.enteredId) {\n      this.bookService.searchBooksByAuthor(this.enteredId).subscribe(result => {\n        if (Array.isArray(result) && result.length > 0) {\n          // this.book = result[0];\n          const numberOfElementsToCapture = 5; // Change this to your desired number\n          this.books = result.slice(0, numberOfElementsToCapture);\n          this.invalidSearchCriteria = false;\n          console.log('Books found:', this.books);\n        }\n      }, error => {\n        this.invalidSearchCriteria = true;\n        console.error('Error fetching books by author:', error);\n      });\n    }\n  }\n  searchByTitle() {\n    if (this.enteredId) {\n      this.bookService.searchBooksByTitle(this.enteredId).subscribe(result => {\n        if (Array.isArray(result) && result.length > 0) {\n          // this.book = result[0];\n          const numberOfElementsToCapture = 5; // Change this to your desired number\n          this.books = result.slice(0, numberOfElementsToCapture);\n          this.invalidSearchCriteria = false;\n          console.log('Books found:', this.books);\n          console.log('Book found:', this.book);\n        }\n      }, error => {\n        this.invalidSearchCriteria = true;\n        console.error('Error fetching books by title:', error);\n      });\n    }\n  }\n  updateBook(id) {\n    this.router.navigate(['update-book', id]);\n    console.log('hello');\n  }\n  deleteBook(id) {\n    this.bookService.deleteBook(id).subscribe(data => {\n      console.log(data);\n      this.getBooks();\n    });\n  }\n  static #_ = this.ɵfac = function BookViewComponent_Factory(t) {\n    return new (t || BookViewComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookViewComponent,\n    selectors: [[\"app-book-view\"]],\n    decls: 0,\n    vars: 0,\n    template: function BookViewComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["BookFilter","BookViewComponent","constructor","bookService","router","isAscending","filter","currentPage","pageSize","searchTerm","searchTitle","searchAuthor","searchName","invalidSearchCriteria","searchCriteria","ngOnInit","getBooks","getBooksList","subscribe","data","books","sortTable","field","sort","a","b","aValue","bValue","paginatedBooks","startIndex","endIndex","slice","previousPage","nextPage","maxPage","Math","ceil","length","bookDetails","id","navigate","search","console","log","enteredId","searchById","searchByAuthor","searchByTitle","error","searchBookById","result","book","searchBooksByAuthor","Array","isArray","numberOfElementsToCapture","searchBooksByTitle","updateBook","deleteBook","_","i0","ɵɵdirectiveInject","i1","BookService","i2","Router","_2","selectors","decls","vars","template","BookViewComponent_Template","rf","ctx","encapsulation"],"sources":["C:\\Users\\Dilip\\Desktop\\angular-crud-main\\demo\\src\\app\\book-view\\book-view.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Book } from '../book'\r\nimport { BookService } from '../book.service'\r\nimport { Router } from '@angular/router';\r\nimport { BookFilter } from '../book-filter';\r\n\r\n\r\n@Component({\r\n  selector: 'app-book-view',\r\n  templateUrl: './book-view.component.html',\r\n})\r\nexport class BookViewComponent implements OnInit {\r\n  items: any[];\r\n  isAscending: boolean = true;\r\n\r\n  filter = new BookFilter();\r\n  book: Book;\r\n  books: any[];\r\n  enteredId: any;\r\n  // enteredAuthor: string;\r\n  // enteredBookName: string;\r\n\r\n  currentPage: number = 1;\r\n  pageSize: number = 4;\r\n\r\n  searchTerm: string = '';\r\nsearchTitle: boolean = false;\r\nsearchAuthor: boolean = false;\r\nsearchName: boolean = false;\r\ninvalidSearchCriteria: boolean = false;\r\n  \r\nsearchCriteria: string = 'title';\r\n\r\n  constructor(private bookService: BookService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getBooks();\r\n    // this.search();\r\n  }\r\n\r\n  private getBooks() {\r\n    this.bookService.getBooksList().subscribe(data => {\r\n      this.books = data;\r\n    });\r\n  }\r\n\r\n  sortTable(field: string) {\r\n    this.books.sort((a, b) => {\r\n      const aValue = a[field];\r\n      const bValue = b[field];\r\n      if (this.isAscending) {\r\n        return aValue - bValue;\r\n      } else {\r\n        return bValue - aValue;\r\n      }\r\n    });\r\n    this.isAscending = !this.isAscending;\r\n  }\r\n\r\n  // In your component class\r\n  paginatedBooks(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.pageSize;\r\n    const endIndex = startIndex + this.pageSize;\r\n    return this.books.slice(startIndex, endIndex);\r\n  }\r\n\r\n\r\n  previousPage() {\r\n    if (this.currentPage > 1) {\r\n      this.currentPage--;\r\n    }\r\n  }\r\n\r\n  nextPage() {\r\n    const maxPage = Math.ceil(this.books.length / this.pageSize);\r\n    if (this.currentPage < maxPage) {\r\n      this.currentPage++;\r\n    }\r\n  }\r\n\r\n  bookDetails(id: number) {\r\n    this.router.navigate(['book-details', id]);\r\n  }\r\n\r\n  \r\n  // ...\r\n  \r\n  search() {\r\n    console.log('enteredId',this.enteredId);\r\n    switch (this.searchCriteria) {\r\n      case 'id':\r\n        this.searchById();\r\n        break;\r\n      case 'author':\r\n        this.searchByAuthor();\r\n        break;\r\n      case 'name':\r\n        // Add the method for searching by name\r\n        this.searchByTitle();\r\n        break;\r\n      default:\r\n        this.invalidSearchCriteria = true;\r\n        console.error('Invalid search criteria');\r\n        break;\r\n    }\r\n  }\r\n  \r\n\r\n    searchById() {\r\n   if (this.enteredId) {\r\n     this.bookService.searchBookById(this.enteredId).subscribe(\r\n        result => {\r\n           this.book = result;\r\n          this.invalidSearchCriteria = false;\r\n            console.log('Book found:', result);\r\n         },\r\n\r\n    \r\n        \r\n         error => {\r\n          this.invalidSearchCriteria = true;\r\n           console.error('Error fetching book:', error);\r\n           // this.book = null; // Reset book on error\r\n         }\r\n       );\r\n     }\r\n   }\r\n\r\n   searchByAuthor() {\r\n    if (this.enteredId) {\r\n      this.bookService.searchBooksByAuthor(this.enteredId).subscribe(\r\n        result => {\r\n          if (Array.isArray(result) && result.length > 0) {\r\n            // this.book = result[0];\r\n            const numberOfElementsToCapture = 5; // Change this to your desired number\r\n            this.books = result.slice(0, numberOfElementsToCapture);\r\n            this.invalidSearchCriteria = false;\r\n            console.log('Books found:', this.books);            \r\n          } \r\n        },  \r\n        error => {\r\n          this.invalidSearchCriteria = true;\r\n          console.error('Error fetching books by author:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  searchByTitle() {\r\n    if (this.enteredId) {\r\n       this.bookService.searchBooksByTitle(this.enteredId).subscribe(\r\n        result => {\r\n          if (Array.isArray(result) && result.length > 0) {\r\n            // this.book = result[0];\r\n            const numberOfElementsToCapture = 5; // Change this to your desired number\r\n            this.books = result.slice(0, numberOfElementsToCapture);\r\n            this.invalidSearchCriteria = false;\r\n            console.log('Books found:', this.books);\r\n            console.log('Book found:', this.book);\r\n          } \r\n        },    \r\n         error => {\r\n          this.invalidSearchCriteria = true;\r\n           console.error('Error fetching books by title:', error);\r\n         }\r\n       );\r\n     } \r\n   }\r\n\r\n\r\n  updateBook(id: number) {\r\n    this.router.navigate(['update-book', id]);\r\n    console.log('hello');\r\n  }\r\n\r\n  deleteBook(id: number) {\r\n    this.bookService.deleteBook(id).subscribe(data => {\r\n      console.log(data);\r\n      this.getBooks();\r\n    })\r\n  }\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}