{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.BookList = [];\n    this.baseURL = \"http://localhost:8080/api/v1/books\";\n  }\n  getBooksList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createBook(book) {\n    return this.httpClient.post(`${this.baseURL}`, book);\n  }\n  // // getBookById(id: number): Observable<Book>{\n  // //   return this.httpClient.get<Book>(`${this.baseURL}/${id}`);\n  // // }\n  getBook(criteria) {\n    const {\n      id,\n      author,\n      bookName\n    } = criteria;\n    let url = this.baseURL;\n    if (id) {\n      url += `/${id}`;\n    } else if (author) {\n      url += `?author=${author}`;\n    } else if (bookName) {\n      url += `?bookName=${bookName}`;\n    }\n    return this.httpClient.get(url);\n  }\n  updateBook(id, book) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, book);\n  }\n  deleteBook(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  searchBookById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BookService","constructor","httpClient","BookList","baseURL","getBooksList","get","createBook","book","post","getBook","criteria","id","author","bookName","url","updateBook","put","deleteBook","delete","searchBookById","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Dilip\\Desktop\\angular-crud-main\\demo\\src\\app\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BookFilter } from './book-filter';\n\nimport { Book } from './book';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  BookList: Book[] = [];\n\n\n  private baseURL=\"http://localhost:8080/api/v1/books\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  \n\n  getBooksList(): Observable<Book[]>{\n    return this.httpClient.get<Book[]>(`${this.baseURL}`);\n  }\n\n  createBook(book: Book): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, book);\n  }\n\n  // // getBookById(id: number): Observable<Book>{\n  // //   return this.httpClient.get<Book>(`${this.baseURL}/${id}`);\n  // // }\n\n  getBook(criteria: { id?: number, author?: string, bookName?: string }): Observable<Book> {\n    const { id, author, bookName } = criteria;\n    let url = this.baseURL;\n\n    if (id) {\n        url += `/${id}`;\n    } else if (author) {\n        url += `?author=${author}`;\n    } else if (bookName) {\n        url += `?bookName=${bookName}`;\n    }\n\n    return this.httpClient.get<Book>(url);\n}\n\n\n  updateBook(id: number, book: Book): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, book);\n  }\n\n  deleteBook(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n\n  searchBookById(id: number): Observable<Book> {\n    return this.httpClient.get<Book>(`${this.baseURL}/${id}`);\n  }\n}\n\n\n"],"mappings":";;AAYA,OAAM,MAAOA,WAAW;EAMtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAL9B,KAAAC,QAAQ,GAAW,EAAE;IAGb,KAAAC,OAAO,GAAC,oCAAoC;EAEN;EAI9CC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACvD;EAEAG,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,IAAI,CAAC;EACtD;EAEA;EACA;EACA;EAEAE,OAAOA,CAACC,QAA6D;IACnE,MAAM;MAAEC,EAAE;MAAEC,MAAM;MAAEC;IAAQ,CAAE,GAAGH,QAAQ;IACzC,IAAII,GAAG,GAAG,IAAI,CAACX,OAAO;IAEtB,IAAIQ,EAAE,EAAE;MACJG,GAAG,IAAI,IAAIH,EAAE,EAAE;KAClB,MAAM,IAAIC,MAAM,EAAE;MACfE,GAAG,IAAI,WAAWF,MAAM,EAAE;KAC7B,MAAM,IAAIC,QAAQ,EAAE;MACjBC,GAAG,IAAI,aAAaD,QAAQ,EAAE;;IAGlC,OAAO,IAAI,CAACZ,UAAU,CAACI,GAAG,CAAOS,GAAG,CAAC;EACzC;EAGEC,UAAUA,CAACJ,EAAU,EAAEJ,IAAU;IAC/B,OAAO,IAAI,CAACN,UAAU,CAACe,GAAG,CAAC,GAAG,IAAI,CAACb,OAAO,IAAIQ,EAAE,EAAE,EAAEJ,IAAI,CAAC;EAC3D;EAEAU,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACV,UAAU,CAACiB,MAAM,CAAC,GAAG,IAAI,CAACf,OAAO,IAAIQ,EAAE,EAAE,CAAC;EACxD;EAEAQ,cAAcA,CAACR,EAAU;IACvB,OAAO,IAAI,CAACV,UAAU,CAACI,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,IAAIQ,EAAE,EAAE,CAAC;EAC3D;EAAC,QAAAS,CAAA,G;qBAhDUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}