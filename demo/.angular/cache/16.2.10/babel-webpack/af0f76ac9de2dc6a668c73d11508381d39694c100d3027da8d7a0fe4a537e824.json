{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BookFilter } from '../book-filter';\nlet BookListComponent = class BookListComponent {\n  // displayedColumns: string[] = ['id', 'bookTitle', 'authorName', 'publicationYear'];\n  // dataSource = new MatTableDataSource<Book>();\n  // ngAfterViewInit() {\n  //   this.dataSource.paginator = this.paginator;\n  // }\n  constructor(bookService, router) {\n    this.bookService = bookService;\n    this.router = router;\n    this.isAscending = true;\n    this.filter = new BookFilter();\n    // enteredAuthor: string;\n    // enteredBookName: string;\n    this.currentPage = 1;\n    this.pageSize = 4;\n    this.searchTerm = '';\n    this.searchTitle = false;\n    this.searchAuthor = false;\n    this.searchName = false;\n    this.invalidSearchCriteria = false;\n    this.searchCriteria = 'title';\n  }\n  ngOnInit() {\n    this.getBooks();\n    // this.search();\n  }\n\n  getBooks() {\n    this.bookService.getBooksList().subscribe(data => {\n      this.books = data;\n    });\n  }\n  sortTable(field) {\n    this.books.sort((a, b) => {\n      const aValue = a[field];\n      const bValue = b[field];\n      if (this.isAscending) {\n        return aValue - bValue;\n      } else {\n        return bValue - aValue;\n      }\n    });\n    this.isAscending = !this.isAscending;\n  }\n  // In your component class\n  paginatedBooks() {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    return this.books.slice(startIndex, endIndex);\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n  nextPage() {\n    const maxPage = Math.ceil(this.books.length / this.pageSize);\n    if (this.currentPage < maxPage) {\n      this.currentPage++;\n    }\n  }\n  bookDetails(id) {\n    this.router.navigate(['book-details', id]);\n  }\n  // ...\n  search() {\n    console.log('enteredId', this.enteredId);\n    switch (this.searchCriteria) {\n      case 'id':\n        this.searchById();\n        break;\n      case 'author':\n        this.searchByAuthor();\n        break;\n      case 'name':\n        // Add the method for searching by name\n        this.searchByTitle();\n        break;\n      default:\n        this.invalidSearchCriteria = true;\n        console.error('Invalid search criteria');\n        break;\n    }\n  }\n  searchById() {\n    if (this.enteredId) {\n      this.bookService.getBookById(this.enteredId).subscribe(result => {\n        this.book = result;\n        this.invalidSearchCriteria = false;\n        console.log('Book found:', result);\n      }, error => {\n        this.invalidSearchCriteria = true;\n        console.error('Error fetching book:', error);\n        // this.book = null; // Reset book on error\n      });\n    }\n  }\n\n  searchByAuthor() {\n    if (this.enteredId) {\n      this.bookService.searchBooksByAuthor(this.enteredId).subscribe(result => {\n        if (Array.isArray(result) && result.length > 0) {\n          // this.book = result[0];\n          const numberOfElementsToCapture = 5; // Change this to your desired number\n          this.books = result.slice(0, numberOfElementsToCapture);\n          this.invalidSearchCriteria = false;\n          console.log('Books found:', this.books);\n        }\n      }, error => {\n        this.invalidSearchCriteria = true;\n        console.error('Error fetching books by author:', error);\n      });\n    }\n  }\n  searchByTitle() {\n    if (this.enteredId) {\n      this.bookService.searchBooksByTitle(this.enteredId).subscribe(result => {\n        if (Array.isArray(result) && result.length > 0) {\n          // this.book = result[0];\n          const numberOfElementsToCapture = 5; // Change this to your desired number\n          this.books = result.slice(0, numberOfElementsToCapture);\n          this.invalidSearchCriteria = false;\n          console.log('Books found:', this.books);\n          console.log('Book found:', this.book);\n        }\n      }, error => {\n        this.invalidSearchCriteria = true;\n        console.error('Error fetching books by title:', error);\n      });\n    }\n  }\n  updateBook(id) {\n    this.router.navigate(['update-book', id]);\n    console.log('hello');\n  }\n  deleteBook(id) {\n    this.bookService.deleteBook(id).subscribe(data => {\n      console.log(data);\n      this.getBooks();\n    });\n  }\n};\nBookListComponent = __decorate([Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})], BookListComponent);\nexport { BookListComponent };","map":{"version":3,"names":["Component","BookFilter","BookListComponent","constructor","bookService","router","isAscending","filter","currentPage","pageSize","searchTerm","searchTitle","searchAuthor","searchName","invalidSearchCriteria","searchCriteria","ngOnInit","getBooks","getBooksList","subscribe","data","books","sortTable","field","sort","a","b","aValue","bValue","paginatedBooks","startIndex","endIndex","slice","previousPage","nextPage","maxPage","Math","ceil","length","bookDetails","id","navigate","search","console","log","enteredId","searchById","searchByAuthor","searchByTitle","error","getBookById","result","book","searchBooksByAuthor","Array","isArray","numberOfElementsToCapture","searchBooksByTitle","updateBook","deleteBook","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Dilip\\Desktop\\angular-crud-main\\demo\\src\\app\\book-list\\book-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Book } from '../book'\nimport { BookService } from '../book.service'\nimport { Router } from '@angular/router';\nimport { BookFilter } from '../book-filter';\n\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n  items: any[];\n  isAscending: boolean = true;\n\n  filter = new BookFilter();\n  book: Book;\n  books: any[];\n  enteredId: any;\n  // enteredAuthor: string;\n  // enteredBookName: string;\n\n  currentPage: number = 1;\n  pageSize: number = 4;\n\n  searchTerm: string = '';\nsearchTitle: boolean = false;\nsearchAuthor: boolean = false;\nsearchName: boolean = false;\ninvalidSearchCriteria: boolean = false;\n  \nsearchCriteria: string = 'title';\n\n  // displayedColumns: string[] = ['id', 'bookTitle', 'authorName', 'publicationYear'];\n  // dataSource = new MatTableDataSource<Book>();\n\n\n  // ngAfterViewInit() {\n  //   this.dataSource.paginator = this.paginator;\n  // }\n\n  constructor(private bookService: BookService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getBooks();\n    // this.search();\n  }\n\n  private getBooks() {\n    this.bookService.getBooksList().subscribe(data => {\n      this.books = data;\n    });\n  }\n\n  sortTable(field: string) {\n    this.books.sort((a, b) => {\n      const aValue = a[field];\n      const bValue = b[field];\n      if (this.isAscending) {\n        return aValue - bValue;\n      } else {\n        return bValue - aValue;\n      }\n    });\n    this.isAscending = !this.isAscending;\n  }\n\n  // In your component class\n  paginatedBooks(): any[] {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    return this.books.slice(startIndex, endIndex);\n  }\n\n\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n\n  nextPage() {\n    const maxPage = Math.ceil(this.books.length / this.pageSize);\n    if (this.currentPage < maxPage) {\n      this.currentPage++;\n    }\n  }\n\n  bookDetails(id: number) {\n    this.router.navigate(['book-details', id]);\n  }\n\n  \n  // ...\n  \n  search() {\n    console.log('enteredId',this.enteredId);\n    switch (this.searchCriteria) {\n      case 'id':\n        this.searchById();\n        break;\n      case 'author':\n        this.searchByAuthor();\n        break;\n      case 'name':\n        // Add the method for searching by name\n        this.searchByTitle();\n        break;\n      default:\n        this.invalidSearchCriteria = true;\n        console.error('Invalid search criteria');\n        break;\n    }\n  }\n  \n\n    searchById() {\n   if (this.enteredId) {\n     this.bookService.getBookById(this.enteredId).subscribe(\n        result => {\n           this.book = result;\n           this.invalidSearchCriteria = false;\n           console.log('Book found:', result);\n         },\n         error => {\n          this.invalidSearchCriteria = true;\n           console.error('Error fetching book:', error);\n           // this.book = null; // Reset book on error\n         }\n       );\n     }\n   }\n\n   searchByAuthor() {\n    if (this.enteredId) {\n      this.bookService.searchBooksByAuthor(this.enteredId).subscribe(\n        result => {\n          if (Array.isArray(result) && result.length > 0) {\n            // this.book = result[0];\n            const numberOfElementsToCapture = 5; // Change this to your desired number\n            this.books = result.slice(0, numberOfElementsToCapture);\n            this.invalidSearchCriteria = false;\n            console.log('Books found:', this.books);            \n          } \n        },  \n        error => {\n          this.invalidSearchCriteria = true;\n          console.error('Error fetching books by author:', error);\n        }\n      );\n    }\n  }\n\n  searchByTitle() {\n    if (this.enteredId) {\n       this.bookService.searchBooksByTitle(this.enteredId).subscribe(\n        result => {\n          if (Array.isArray(result) && result.length > 0) {\n            // this.book = result[0];\n            const numberOfElementsToCapture = 5; // Change this to your desired number\n            this.books = result.slice(0, numberOfElementsToCapture);\n            this.invalidSearchCriteria = false;\n            console.log('Books found:', this.books);\n            console.log('Book found:', this.book);\n          } \n        },    \n         error => {\n          this.invalidSearchCriteria = true;\n           console.error('Error fetching books by title:', error);\n         }\n       );\n     } \n   }\n\n\n  updateBook(id: number) {\n    this.router.navigate(['update-book', id]);\n    console.log('hello');\n  }\n\n  deleteBook(id: number) {\n    this.bookService.deleteBook(id).subscribe(data => {\n      console.log(data);\n      this.getBooks();\n    })\n  }\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}